{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\todo_app\\\\frontend\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { List, ListItem, Checkbox, IconButton, ListItemText, Paper, Typography, Box, Divider, Tooltip, TextField, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onUpdate,\n  onDelete\n}) => {\n  _s();\n  const [editingTask, setEditingTask] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // State for delete confirmation dialog\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const handleEditClick = task => {\n    setEditingTask(task);\n    setEditedTitle(task.title);\n  };\n  const handleSaveEdit = async () => {\n    if (editingTask) {\n      setIsProcessing(true);\n      try {\n        await onUpdate({\n          ...editingTask,\n          title: editedTitle\n        });\n        setEditingTask(null);\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n  };\n\n  // Open confirmation dialog\n  const handleDeleteClick = id => {\n    setTaskToDelete(id);\n    setDeleteDialogOpen(true);\n  };\n\n  // Confirm delete\n  const handleConfirmDelete = async () => {\n    if (taskToDelete !== null) {\n      setIsProcessing(true);\n      await onDelete(taskToDelete);\n      setIsProcessing(false);\n      setTaskToDelete(null);\n      setDeleteDialogOpen(false);\n    }\n  };\n\n  // Cancel delete\n  const handleCancelDelete = () => {\n    setTaskToDelete(null);\n    setDeleteDialogOpen(false);\n  };\n  const handleToggleComplete = async task => {\n    setIsProcessing(true);\n    try {\n      await onUpdate({\n        ...task,\n        completed: !task.completed\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Sort tasks by priority before rendering\n  const sortedTasks = [...tasks].sort((a, b) => a.priority - b.priority);\n\n  // Handle drag end\n  const handleDragEnd = async result => {\n    if (!result.destination) return;\n    const reordered = Array.from(sortedTasks);\n    const [removed] = reordered.splice(result.source.index, 1);\n    reordered.splice(result.destination.index, 0, removed);\n\n    // Update priorities based on new order\n    for (let i = 0; i < reordered.length; i++) {\n      reordered[i].priority = i;\n    }\n\n    // Persist the new order in the backend\n    await axios.post('/api/tasks/reorder', reordered);\n    refetchTasks();\n    // Optionally, update the frontend state or refetch tasks if needed\n  };\n  if (!tasks.length) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        borderRadius: 2,\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        align: \"center\",\n        children: \"No tasks yet. Add your first task!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 0,\n        borderRadius: 2,\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"task-list\",\n          children: provided => /*#__PURE__*/_jsxDEV(List, {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [sortedTasks.map((task, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id.toString(),\n              index: idx,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  sx: {\n                    bgcolor: task.completed ? '#f0f4ff' : '#fff',\n                    borderRadius: 2,\n                    mb: 1,\n                    boxShadow: 0,\n                    transition: 'background 0.2s'\n                  },\n                  secondaryAction: (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? null : /*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        edge: \"end\",\n                        color: \"primary\",\n                        onClick: () => handleEditClick(task),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 158,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        edge: \"end\",\n                        color: \"error\",\n                        onClick: () => handleDeleteClick(task.id),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 163,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 31\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    edge: \"start\",\n                    checked: task.completed,\n                    onChange: () => handleToggleComplete(task),\n                    color: \"primary\",\n                    disabled: isProcessing || (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 27\n                  }, this), (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        variant: \"standard\",\n                        value: editedTitle,\n                        onChange: e => setEditedTitle(e.target.value),\n                        disabled: isProcessing,\n                        fullWidth: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        color: \"success\",\n                        onClick: handleSaveEdit,\n                        disabled: isProcessing || !editedTitle.trim(),\n                        sx: {\n                          ml: 1\n                        },\n                        children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        color: \"error\",\n                        onClick: handleCancelEdit,\n                        disabled: isProcessing,\n                        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        textDecoration: task.completed ? 'line-through' : 'none',\n                        color: task.completed ? 'text.secondary' : 'text.primary',\n                        fontWeight: 'normal'\n                      },\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this), idx < tasks.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleCancelDelete,\n      \"aria-labelledby\": \"confirm-delete-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"confirm-delete-title\",\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          autoFocus: true,\n          disabled: isProcessing,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TaskList, \"/vQ04Dxq2eah3lRIVRFe5WyygmA=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","List","ListItem","Checkbox","IconButton","ListItemText","Paper","Typography","Box","Divider","Tooltip","TextField","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","DeleteIcon","EditIcon","CheckIcon","CloseIcon","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","onUpdate","onDelete","_s","editingTask","setEditingTask","editedTitle","setEditedTitle","isProcessing","setIsProcessing","deleteDialogOpen","setDeleteDialogOpen","taskToDelete","setTaskToDelete","handleEditClick","task","title","handleSaveEdit","handleCancelEdit","handleDeleteClick","id","handleConfirmDelete","handleCancelDelete","handleToggleComplete","completed","sortedTasks","sort","a","b","priority","handleDragEnd","result","destination","reordered","Array","from","removed","splice","source","index","i","length","post","refetchTasks","elevation","sx","p","borderRadius","mt","children","color","align","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","droppableId","provided","ref","innerRef","droppableProps","map","idx","draggableId","toString","draggableProps","dragHandleProps","bgcolor","mb","boxShadow","transition","secondaryAction","edge","onClick","checked","onChange","disabled","primary","display","alignItems","gap","variant","value","e","target","fullWidth","trim","ml","textDecoration","fontWeight","placeholder","open","onClose","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/todo_app/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Task } from '../models/Task';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Divider,\r\n  Tooltip,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from '@hello-pangea/dnd';\r\nimport axios from 'axios';\r\n\r\ninterface TaskListProps {\r\n  tasks: Task[];\r\n  onToggle: (task: Task) => Promise<void>;\r\n  onUpdate: (task: Task) => Promise<void>;\r\n  onDelete: (id: number) => Promise<void>;\r\n  refetchTasks: () => void;\r\n}\r\n\r\nconst TaskList = ({ tasks, onUpdate, onDelete }: TaskListProps) => {\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [editedTitle, setEditedTitle] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  // State for delete confirmation dialog\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [taskToDelete, setTaskToDelete] = useState<number | null>(null);\r\n\r\n  const handleEditClick = (task: Task) => {\r\n    setEditingTask(task);\r\n    setEditedTitle(task.title);\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (editingTask) {\r\n      setIsProcessing(true);\r\n      try {\r\n        await onUpdate({ ...editingTask, title: editedTitle });\r\n        setEditingTask(null);\r\n      } finally {\r\n        setIsProcessing(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingTask(null);\r\n  };\r\n\r\n  // Open confirmation dialog\r\n  const handleDeleteClick = (id: number) => {\r\n    setTaskToDelete(id);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  // Confirm delete\r\n  const handleConfirmDelete = async () => {\r\n    if (taskToDelete !== null) {\r\n      setIsProcessing(true);\r\n      await onDelete(taskToDelete);\r\n      setIsProcessing(false);\r\n      setTaskToDelete(null);\r\n      setDeleteDialogOpen(false);\r\n    }\r\n  };\r\n\r\n  // Cancel delete\r\n  const handleCancelDelete = () => {\r\n    setTaskToDelete(null);\r\n    setDeleteDialogOpen(false);\r\n  };\r\n\r\n  const handleToggleComplete = async (task: Task) => {\r\n    setIsProcessing(true);\r\n    try {\r\n      await onUpdate({ ...task, completed: !task.completed });\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Sort tasks by priority before rendering\r\n  const sortedTasks = [...tasks].sort((a, b) => a.priority - b.priority);\r\n\r\n  // Handle drag end\r\n  const handleDragEnd = async (result: DropResult) => {\r\n    if (!result.destination) return;\r\n    const reordered = Array.from(sortedTasks);\r\n    const [removed] = reordered.splice(result.source.index, 1);\r\n    reordered.splice(result.destination.index, 0, removed);\r\n\r\n    // Update priorities based on new order\r\n    for (let i = 0; i < reordered.length; i++) {\r\n      reordered[i].priority = i;\r\n    }\r\n\r\n    // Persist the new order in the backend\r\n    await axios.post('/api/tasks/reorder', reordered);\r\n    refetchTasks();\r\n    // Optionally, update the frontend state or refetch tasks if needed\r\n  };\r\n\r\n  if (!tasks.length) {\r\n    return (\r\n      <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mt: 2 }}>\r\n        <Typography color=\"text.secondary\" align=\"center\">\r\n          No tasks yet. Add your first task!\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={2} sx={{ p: 0, borderRadius: 2, mt: 2 }}>\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          <Droppable droppableId=\"task-list\">\r\n            {(provided) => (\r\n              <List ref={provided.innerRef} {...provided.droppableProps}>\r\n                {sortedTasks.map((task, idx) => (\r\n                  <Draggable key={task.id} draggableId={task.id.toString()} index={idx}>\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <ListItem\r\n                          sx={{\r\n                            bgcolor: task.completed ? '#f0f4ff' : '#fff',\r\n                            borderRadius: 2,\r\n                            mb: 1,\r\n                            boxShadow: 0,\r\n                            transition: 'background 0.2s',\r\n                          }}\r\n                          secondaryAction={\r\n                            editingTask?.id === task.id ? null : (\r\n                              <Box>\r\n                                <Tooltip title=\"Edit\">\r\n                                  <IconButton edge=\"end\" color=\"primary\" onClick={() => handleEditClick(task)}>\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Delete\">\r\n                                  <IconButton edge=\"end\" color=\"error\" onClick={() => handleDeleteClick(task.id!)}>\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </Box>\r\n                            )\r\n                          }\r\n                        >\r\n                          <Checkbox\r\n                            edge=\"start\"\r\n                            checked={task.completed}\r\n                            onChange={() => handleToggleComplete(task)}\r\n                            color=\"primary\"\r\n                            disabled={isProcessing || editingTask?.id === task.id}\r\n                          />\r\n                          {editingTask?.id === task.id ? (\r\n                            <ListItemText\r\n                              primary={\r\n                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                  <TextField\r\n                                    variant=\"standard\"\r\n                                    value={editedTitle}\r\n                                    onChange={(e) => setEditedTitle(e.target.value)}\r\n                                    disabled={isProcessing}\r\n                                    fullWidth\r\n                                  />\r\n                                  <IconButton\r\n                                    color=\"success\"\r\n                                    onClick={handleSaveEdit}\r\n                                    disabled={isProcessing || !editedTitle.trim()}\r\n                                    sx={{ ml: 1 }}\r\n                                  >\r\n                                    <CheckIcon />\r\n                                  </IconButton>\r\n                                  <IconButton\r\n                                    color=\"error\"\r\n                                    onClick={handleCancelEdit}\r\n                                    disabled={isProcessing}\r\n                                  >\r\n                                    <CloseIcon />\r\n                                  </IconButton>\r\n                                </Box>\r\n                              }\r\n                            />\r\n                          ) : (\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography\r\n                                  sx={{\r\n                                    textDecoration: task.completed ? 'line-through' : 'none',\r\n                                    color: task.completed ? 'text.secondary' : 'text.primary',\r\n                                    fontWeight: 'normal',\r\n                                  }}\r\n                                >\r\n                                  {task.title}\r\n                                </Typography>\r\n                              }\r\n                            />\r\n                          )}\r\n                        </ListItem>\r\n                        {idx < tasks.length - 1 && <Divider />}\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </List>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </Paper>\r\n      <Dialog\r\n        open={deleteDialogOpen}\r\n        onClose={handleCancelDelete}\r\n        aria-labelledby=\"confirm-delete-title\"\r\n      >\r\n        <DialogTitle id=\"confirm-delete-title\">Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to delete this task?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancelDelete} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmDelete} color=\"error\" autoFocus disabled={isProcessing}>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}