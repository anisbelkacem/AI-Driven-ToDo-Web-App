{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport * as taskApi from '../services/api';\nexport const useTasks = () => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    data: tasks = []\n  } = useQuery({\n    queryKey: ['tasks'],\n    queryFn: taskApi.getTasks\n  });\n\n  // Add task mutation (accepts Task without id)\n  const addMutation = useMutation({\n    mutationFn: task => taskApi.addTask(task),\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['tasks']\n    })\n  });\n\n  // Update task mutation (requires full Task with id)\n  const updateMutation = useMutation({\n    mutationFn: task => taskApi.updateTask(task),\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['tasks']\n    })\n  });\n\n  // Delete task mutation (accepts just id)\n  const deleteMutation = useMutation({\n    mutationFn: id => taskApi.deleteTask(id),\n    onSuccess: () => queryClient.invalidateQueries({\n      queryKey: ['tasks']\n    })\n  });\n  const fetchTasks = async () => {\n    setIsLoading(true);\n    const res = await axios.get('/api/tasks');\n    setTasks(res.data);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return {\n    tasks,\n    addTask: addMutation.mutate,\n    toggleTask: updateMutation.mutate,\n    deleteTask: deleteMutation.mutate,\n    updateTask: updateMutation.mutate,\n    isLoading: addMutation.isPending || updateMutation.isPending || deleteMutation.isPending\n  };\n};\n_s(useTasks, \"w9lQRAl/8zYe9klGOJqn30K+Bcs=\", false, function () {\n  return [useQueryClient, useQuery, useMutation, useMutation, useMutation];\n});","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","taskApi","useTasks","_s","queryClient","data","tasks","queryKey","queryFn","getTasks","addMutation","mutationFn","task","addTask","onSuccess","invalidateQueries","updateMutation","updateTask","deleteMutation","id","deleteTask","fetchTasks","setIsLoading","res","axios","get","setTasks","useEffect","mutate","toggleTask","isLoading","isPending"],"sources":["C:/Users/GIGABYTE/todo_app/frontend/src/hooks/useTasks.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport * as taskApi from '../services/api';\r\nimport { Task } from '../models/Task';\r\n\r\nexport const useTasks = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  const { data: tasks = [] } = useQuery<Task[]>({\r\n    queryKey: ['tasks'],\r\n    queryFn: taskApi.getTasks\r\n  });\r\n\r\n  // Add task mutation (accepts Task without id)\r\n  const addMutation = useMutation({\r\n    mutationFn: (task: Omit<Task, 'id'>) => taskApi.addTask(task),\r\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: ['tasks'] })\r\n  });\r\n\r\n  // Update task mutation (requires full Task with id)\r\n  const updateMutation = useMutation({\r\n    mutationFn: (task: Task) => taskApi.updateTask(task),\r\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: ['tasks'] })\r\n  });\r\n\r\n  // Delete task mutation (accepts just id)\r\n  const deleteMutation = useMutation({\r\n    mutationFn: (id: number) => taskApi.deleteTask(id),\r\n    onSuccess: () => queryClient.invalidateQueries({ queryKey: ['tasks'] })\r\n  });\r\n  const fetchTasks = async () => {\r\n    setIsLoading(true);\r\n    const res = await axios.get('/api/tasks');\r\n    setTasks(res.data);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    tasks,\r\n    addTask: addMutation.mutate,\r\n    toggleTask: updateMutation.mutate,\r\n    deleteTask: deleteMutation.mutate,\r\n    updateTask: updateMutation.mutate,\r\n    isLoading: addMutation.isPending || updateMutation.isPending || deleteMutation.isPending\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;AAC7E,OAAO,KAAKC,OAAO,MAAM,iBAAiB;AAG1C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC;EAEpC,MAAM;IAAEK,IAAI,EAAEC,KAAK,GAAG;EAAG,CAAC,GAAGR,QAAQ,CAAS;IAC5CS,QAAQ,EAAE,CAAC,OAAO,CAAC;IACnBC,OAAO,EAAEP,OAAO,CAACQ;EACnB,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAGX,WAAW,CAAC;IAC9BY,UAAU,EAAGC,IAAsB,IAAKX,OAAO,CAACY,OAAO,CAACD,IAAI,CAAC;IAC7DE,SAAS,EAAEA,CAAA,KAAMV,WAAW,CAACW,iBAAiB,CAAC;MAAER,QAAQ,EAAE,CAAC,OAAO;IAAE,CAAC;EACxE,CAAC,CAAC;;EAEF;EACA,MAAMS,cAAc,GAAGjB,WAAW,CAAC;IACjCY,UAAU,EAAGC,IAAU,IAAKX,OAAO,CAACgB,UAAU,CAACL,IAAI,CAAC;IACpDE,SAAS,EAAEA,CAAA,KAAMV,WAAW,CAACW,iBAAiB,CAAC;MAAER,QAAQ,EAAE,CAAC,OAAO;IAAE,CAAC;EACxE,CAAC,CAAC;;EAEF;EACA,MAAMW,cAAc,GAAGnB,WAAW,CAAC;IACjCY,UAAU,EAAGQ,EAAU,IAAKlB,OAAO,CAACmB,UAAU,CAACD,EAAE,CAAC;IAClDL,SAAS,EAAEA,CAAA,KAAMV,WAAW,CAACW,iBAAiB,CAAC;MAAER,QAAQ,EAAE,CAAC,OAAO;IAAE,CAAC;EACxE,CAAC,CAAC;EACF,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BC,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,YAAY,CAAC;IACzCC,QAAQ,CAACH,GAAG,CAAClB,IAAI,CAAC;IAClBiB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDK,SAAS,CAAC,MAAM;IACdN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,OAAO;IACLf,KAAK;IACLO,OAAO,EAAEH,WAAW,CAACkB,MAAM;IAC3BC,UAAU,EAAEb,cAAc,CAACY,MAAM;IACjCR,UAAU,EAAEF,cAAc,CAACU,MAAM;IACjCX,UAAU,EAAED,cAAc,CAACY,MAAM;IACjCE,SAAS,EAAEpB,WAAW,CAACqB,SAAS,IAAIf,cAAc,CAACe,SAAS,IAAIb,cAAc,CAACa;EACjF,CAAC;AACH,CAAC;AAAC5B,EAAA,CA7CWD,QAAQ;EAAA,QACCF,cAAc,EAELF,QAAQ,EAMjBC,WAAW,EAMRA,WAAW,EAMXA,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}