{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\todo_app\\\\frontend\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { List, ListItem, Checkbox, IconButton, ListItemText, Paper, Typography, Box, Divider, Tooltip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onUpdate,\n  onDelete\n}) => {\n  _s();\n  const [editingTask, setEditingTask] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleEditClick = task => {\n    setEditingTask(task);\n    setEditedTitle(task.title);\n  };\n  const handleSaveEdit = async () => {\n    if (editingTask) {\n      setIsProcessing(true);\n      try {\n        await onUpdate({\n          ...editingTask,\n          title: editedTitle\n        });\n        setEditingTask(null);\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingTask(null);\n  };\n  const handleDeleteClick = id => {\n    setEditingTask(null);\n    setIsProcessing(true);\n    onDelete(id).finally(() => setIsProcessing(false));\n  };\n  const handleToggleComplete = async task => {\n    setIsProcessing(true);\n    try {\n      await onUpdate({\n        ...task,\n        completed: !task.completed\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  if (!tasks.length) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        borderRadius: 2,\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        align: \"center\",\n        children: \"No tasks yet. Add your first task!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      p: 0,\n      borderRadius: 2,\n      mt: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            bgcolor: task.completed ? '#f0f4ff' : '#fff',\n            borderRadius: 2,\n            mb: 1,\n            boxShadow: 0,\n            transition: 'background 0.2s'\n          },\n          secondaryAction: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Edit\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                color: \"primary\",\n                onClick: () => handleEditClick(task),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Delete\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                color: \"error\",\n                onClick: () => handleDeleteClick(task.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: task.completed,\n            onChange: () => handleToggleComplete(task),\n            color: \"primary\",\n            disabled: isProcessing || (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"standard\",\n              value: editedTitle,\n              onChange: e => setEditedTitle(e.target.value),\n              disabled: isProcessing,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                textDecoration: task.completed ? 'line-through' : 'none',\n                color: task.completed ? 'text.secondary' : 'text.primary',\n                fontWeight: 'normal'\n              },\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), idx < tasks.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 40\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"pc+ZSPK/VfrNgv12H8Q2TPe5mr8=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","List","ListItem","Checkbox","IconButton","ListItemText","Paper","Typography","Box","Divider","Tooltip","DeleteIcon","EditIcon","jsxDEV","_jsxDEV","TaskList","tasks","onUpdate","onDelete","_s","editingTask","setEditingTask","editedTitle","setEditedTitle","isProcessing","setIsProcessing","handleEditClick","task","title","handleSaveEdit","handleCancelEdit","handleDeleteClick","id","finally","handleToggleComplete","completed","length","elevation","sx","p","borderRadius","mt","children","color","align","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","Fragment","bgcolor","mb","boxShadow","transition","secondaryAction","edge","onClick","checked","onChange","disabled","primary","TextField","variant","value","e","target","fullWidth","textDecoration","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/todo_app/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Task } from '../models/Task';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Divider,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\ninterface TaskListProps {\r\n  tasks: Task[];\r\n  onToggle: (task: Task) => Promise<void>;\r\n  onUpdate: (task: Task) => Promise<void>;\r\n  onDelete: (id: number) => Promise<void>;\r\n}\r\n\r\nconst TaskList = ({ tasks, onUpdate, onDelete }: TaskListProps) => {\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [editedTitle, setEditedTitle] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const handleEditClick = (task: Task) => {\r\n    setEditingTask(task);\r\n    setEditedTitle(task.title);\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (editingTask) {\r\n      setIsProcessing(true);\r\n      try {\r\n        await onUpdate({ ...editingTask, title: editedTitle });\r\n        setEditingTask(null);\r\n      } finally {\r\n        setIsProcessing(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const handleDeleteClick = (id: number) => {\r\n    setEditingTask(null);\r\n    setIsProcessing(true);\r\n    onDelete(id).finally(() => setIsProcessing(false));\r\n  };\r\n\r\n  const handleToggleComplete = async (task: Task) => {\r\n    setIsProcessing(true);\r\n    try {\r\n      await onUpdate({ ...task, completed: !task.completed });\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  if (!tasks.length) {\r\n    return (\r\n      <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mt: 2 }}>\r\n        <Typography color=\"text.secondary\" align=\"center\">\r\n          No tasks yet. Add your first task!\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ p: 0, borderRadius: 2, mt: 2 }}>\r\n      <List>\r\n        {tasks.map((task, idx) => (\r\n          <React.Fragment key={task.id}>\r\n            <ListItem\r\n              sx={{\r\n                bgcolor: task.completed ? '#f0f4ff' : '#fff',\r\n                borderRadius: 2,\r\n                mb: 1,\r\n                boxShadow: 0,\r\n                transition: 'background 0.2s',\r\n              }}\r\n              secondaryAction={\r\n                <Box>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton edge=\"end\" color=\"primary\" onClick={() => handleEditClick(task)}>\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton edge=\"end\" color=\"error\" onClick={() => handleDeleteClick(task.id!)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n              }\r\n            >\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={task.completed}\r\n                onChange={() => handleToggleComplete(task)}\r\n                color=\"primary\"\r\n                disabled={isProcessing || editingTask?.id === task.id}\r\n              />\r\n              {editingTask?.id === task.id ? (\r\n                <ListItemText\r\n                  primary={\r\n                    <TextField\r\n                      variant=\"standard\"\r\n                      value={editedTitle}\r\n                      onChange={(e) => setEditedTitle(e.target.value)}\r\n                      disabled={isProcessing}\r\n                      fullWidth\r\n                    />\r\n                  }\r\n                />\r\n              ) : (\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography\r\n                      sx={{\r\n                        textDecoration: task.completed ? 'line-through' : 'none',\r\n                        color: task.completed ? 'text.secondary' : 'text.primary',\r\n                        fontWeight: 'normal',\r\n                      }}\r\n                    >\r\n                      {task.title}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              )}\r\n            </ListItem>\r\n            {idx < tasks.length - 1 && <Divider />}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}