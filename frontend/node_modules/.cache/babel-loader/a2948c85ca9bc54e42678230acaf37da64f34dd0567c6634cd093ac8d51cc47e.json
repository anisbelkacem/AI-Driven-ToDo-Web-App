{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\todo_app\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport TasksPage from './components/TasksPage';\nimport { useTasks } from './hooks/useTasks';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userName, setUserName] = useState('');\n  const handleLogin = () => {\n    setUserName('Anis Belkacem');\n    setIsAuthenticated(true);\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setUserName('');\n  };\n  const {\n    tasks,\n    addTask,\n    updateTask,\n    toggleTask,\n    deleteTask,\n    isLoading\n  } = useTasks();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {\n            onSignup: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TasksPage, {\n          userName: userName,\n          tasks: tasks || [],\n          onLogout: handleLogout,\n          onToggle: toggleTask,\n          onDelete: task => deleteTask(task.id),\n          onAdd: async title => {\n            await addTask({\n              title,\n              completed: false\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2/dn64GwPjGjJ4n48KenAVI/HxA=\", false, function () {\n  return [useTasks];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Login","Signup","TasksPage","useTasks","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","userName","setUserName","handleLogin","handleLogout","tasks","addTask","updateTask","toggleTask","deleteTask","isLoading","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onSignup","to","onLogout","onToggle","onDelete","task","id","onAdd","title","completed","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/todo_app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport TasksPage from './components/TasksPage';\r\nimport { useTasks } from './hooks/useTasks';\r\nimport { Task } from './models/Task';\r\n\r\nconst App: React.FC = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userName, setUserName] = useState<string>('');\r\n\r\n  const handleLogin = () => {\r\n    setUserName('Anis Belkacem');\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(false);\r\n    setUserName('');\r\n  };\r\n\r\n  const { tasks, addTask, updateTask, toggleTask, deleteTask, isLoading } = useTasks();\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {!isAuthenticated ? (\r\n          <>\r\n            <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n            <Route path=\"/signup\" element={<Signup onSignup={() => {}} />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n          </>\r\n        ) : (\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <TasksPage\r\n                userName={userName}\r\n                tasks={tasks || []}\r\n                onLogout={handleLogout}\r\n                onToggle={toggleTask}\r\n                onDelete={(task) => deleteTask(task.id)}\r\n                onAdd={async (title) => { await addTask({ title, completed: false }); }}\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}