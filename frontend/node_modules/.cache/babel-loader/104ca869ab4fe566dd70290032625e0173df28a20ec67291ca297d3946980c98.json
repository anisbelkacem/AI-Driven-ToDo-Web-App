{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\todo_app\\\\frontend\\\\src\\\\components\\\\TasksPage.tsx\";\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, Button, Box, Paper, IconButton, List, ListItem, ListItemText, Checkbox, ListItemSecondaryAction, Divider, Container } from '@mui/material';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddTask from './AddTask'; // Your component for adding tasks\n// Your Task type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = ({\n  userName,\n  tasks,\n  onLogout,\n  onToggle,\n  onDelete,\n  onAdd\n}) => {\n  // Wrap onAdd to ensure it returns a Promise if it doesn't already\n  const handleAdd = async title => {\n    await onAdd(title);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #e0e7ff 0%, #f3f4f6 100%)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      elevation: 2,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          startIcon: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }, this),\n          onClick: onLogout,\n          sx: {\n            fontWeight: 600\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 4,\n        sx: {\n          p: 4,\n          borderRadius: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          fontWeight: 700,\n          color: \"primary\",\n          mb: 3,\n          align: \"center\",\n          children: \"Your Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n          onAdd: onAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            mt: 2\n          },\n          children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            align: \"center\",\n            mt: 2,\n            children: \"No tasks yet. Add your first task!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                bgcolor: task.completed ? '#e0e7ff' : '#fff',\n                borderRadius: 2,\n                mb: 1,\n                boxShadow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                edge: \"start\",\n                checked: task.completed,\n                onChange: () => onToggle(task),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    textDecoration: task.completed ? 'line-through' : 'none',\n                    color: task.completed ? 'text.secondary' : 'text.primary',\n                    fontWeight: 500\n                  },\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  color: \"error\",\n                  onClick: () => onDelete(task),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","AppBar","Toolbar","Typography","Button","Box","Paper","IconButton","List","ListItem","ListItemText","Checkbox","ListItemSecondaryAction","Divider","Container","LogoutIcon","DeleteIcon","AddTask","jsxDEV","_jsxDEV","TasksPage","userName","tasks","onLogout","onToggle","onDelete","onAdd","handleAdd","title","sx","minHeight","background","children","position","color","elevation","variant","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","fontWeight","maxWidth","p","borderRadius","mb","align","mt","length","map","task","Fragment","bgcolor","completed","boxShadow","edge","checked","onChange","primary","textDecoration","id","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/todo_app/frontend/src/components/TasksPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  Stack,\r\n  Container,\r\n} from '@mui/material';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddTask from './AddTask'; // Your component for adding tasks\r\nimport { Task } from '../models/Task'; // Your Task type\r\n\r\ninterface TasksPageProps {\r\n  userName: string;\r\n  tasks: Task[];\r\n  onLogout: () => void;\r\n  onToggle: (task: Task) => void;\r\n  onDelete: (task: Task) => void;\r\n  onAdd: (title: string) => Promise<void>;\r\n}\r\n\r\nconst TasksPage: React.FC<TasksPageProps> = ({\r\n  userName,\r\n  tasks,\r\n  onLogout,\r\n  onToggle,\r\n  onDelete,\r\n  onAdd,\r\n}) => {\r\n  // Wrap onAdd to ensure it returns a Promise if it doesn't already\r\n  const handleAdd = async (title: string) => {\r\n    await onAdd(title);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '100vh', background: 'linear-gradient(135deg, #e0e7ff 0%, #f3f4f6 100%)' }}>\r\n      <AppBar position=\"static\" color=\"primary\" elevation={2}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n            Welcome, <b>{userName}</b>\r\n          </Typography>\r\n          <Button\r\n            color=\"inherit\"\r\n            startIcon={<LogoutIcon />}\r\n            onClick={onLogout}\r\n            sx={{ fontWeight: 600 }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n          <AddTask onAdd={handleAdd} />\r\n        <Container maxWidth=\"sm\">\r\n          <Paper elevation={4} sx={{ p: 4, borderRadius: 3 }}>\r\n            <Typography variant=\"h4\" fontWeight={700} color=\"primary\" mb={3} align=\"center\">\r\n              Your Tasks\r\n            </Typography>\r\n            <AddTask onAdd={onAdd} />\r\n            <List sx={{ mt: 2 }}>\r\n              {tasks.length === 0 ? (\r\n                <Typography color=\"text.secondary\" align=\"center\" mt={2}>\r\n                  No tasks yet. Add your first task!\r\n                </Typography>\r\n              ) : (\r\n                tasks.map((task) => (\r\n                  <React.Fragment key={task.id}>\r\n                    <ListItem\r\n                      sx={{\r\n                        bgcolor: task.completed ? '#e0e7ff' : '#fff',\r\n                        borderRadius: 2,\r\n                        mb: 1,\r\n                        boxShadow: 1,\r\n                      }}\r\n                    >\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        checked={task.completed}\r\n                        onChange={() => onToggle(task)}\r\n                        color=\"primary\"\r\n                      />\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            sx={{\r\n                              textDecoration: task.completed ? 'line-through' : 'none',\r\n                              color: task.completed ? 'text.secondary' : 'text.primary',\r\n                              fontWeight: 500,\r\n                            }}\r\n                          >\r\n                            {task.title}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" color=\"error\" onClick={() => onDelete(task)}>\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </React.Fragment>\r\n                ))\r\n              )}\r\n            </List>\r\n          </Paper>\r\n        </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TasksPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,GAAG,EACHC,KAAK,EACLC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACRC,uBAAuB,EACvBC,OAAO,EAEPC,SAAS,QACJ,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACM;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWvC,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,QAAQ;EACRC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,SAAS,GAAG,MAAOC,KAAa,IAAK;IACzC,MAAMF,KAAK,CAACE,KAAK,CAAC;EACpB,CAAC;EAED,oBACET,OAAA,CAACd,GAAG;IAACwB,EAAE,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAoD,CAAE;IAAAC,QAAA,gBAC/Fb,OAAA,CAAClB,MAAM;MAACgC,QAAQ,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAACC,SAAS,EAAE,CAAE;MAAAH,QAAA,eACrDb,OAAA,CAACjB,OAAO;QAAA8B,QAAA,gBACNb,OAAA,CAAChB,UAAU;UAACiC,OAAO,EAAC,IAAI;UAACP,EAAE,EAAE;YAAEQ,QAAQ,EAAE;UAAE,CAAE;UAAAL,QAAA,GAAC,WACnC,eAAAb,OAAA;YAAAa,QAAA,EAAIX;UAAQ;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACbtB,OAAA,CAACf,MAAM;UACL8B,KAAK,EAAC,SAAS;UACfQ,SAAS,eAAEvB,OAAA,CAACJ,UAAU;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC1BE,OAAO,EAAEpB,QAAS;UAClBM,EAAE,EAAE;YAAEe,UAAU,EAAE;UAAI,CAAE;UAAAZ,QAAA,EACzB;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACLtB,OAAA,CAACF,OAAO;MAACS,KAAK,EAAEC;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BtB,OAAA,CAACL,SAAS;MAAC+B,QAAQ,EAAC,IAAI;MAAAb,QAAA,eACtBb,OAAA,CAACb,KAAK;QAAC6B,SAAS,EAAE,CAAE;QAACN,EAAE,EAAE;UAAEiB,CAAC,EAAE,CAAC;UAAEC,YAAY,EAAE;QAAE,CAAE;QAAAf,QAAA,gBACjDb,OAAA,CAAChB,UAAU;UAACiC,OAAO,EAAC,IAAI;UAACQ,UAAU,EAAE,GAAI;UAACV,KAAK,EAAC,SAAS;UAACc,EAAE,EAAE,CAAE;UAACC,KAAK,EAAC,QAAQ;UAAAjB,QAAA,EAAC;QAEhF;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbtB,OAAA,CAACF,OAAO;UAACS,KAAK,EAAEA;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBtB,OAAA,CAACX,IAAI;UAACqB,EAAE,EAAE;YAAEqB,EAAE,EAAE;UAAE,CAAE;UAAAlB,QAAA,EACjBV,KAAK,CAAC6B,MAAM,KAAK,CAAC,gBACjBhC,OAAA,CAAChB,UAAU;YAAC+B,KAAK,EAAC,gBAAgB;YAACe,KAAK,EAAC,QAAQ;YAACC,EAAE,EAAE,CAAE;YAAAlB,QAAA,EAAC;UAEzD;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,GAEbnB,KAAK,CAAC8B,GAAG,CAAEC,IAAI,iBACblC,OAAA,CAACnB,KAAK,CAACsD,QAAQ;YAAAtB,QAAA,gBACbb,OAAA,CAACV,QAAQ;cACPoB,EAAE,EAAE;gBACF0B,OAAO,EAAEF,IAAI,CAACG,SAAS,GAAG,SAAS,GAAG,MAAM;gBAC5CT,YAAY,EAAE,CAAC;gBACfC,EAAE,EAAE,CAAC;gBACLS,SAAS,EAAE;cACb,CAAE;cAAAzB,QAAA,gBAEFb,OAAA,CAACR,QAAQ;gBACP+C,IAAI,EAAC,OAAO;gBACZC,OAAO,EAAEN,IAAI,CAACG,SAAU;gBACxBI,QAAQ,EAAEA,CAAA,KAAMpC,QAAQ,CAAC6B,IAAI,CAAE;gBAC/BnB,KAAK,EAAC;cAAS;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACFtB,OAAA,CAACT,YAAY;gBACXmD,OAAO,eACL1C,OAAA,CAAChB,UAAU;kBACT0B,EAAE,EAAE;oBACFiC,cAAc,EAAET,IAAI,CAACG,SAAS,GAAG,cAAc,GAAG,MAAM;oBACxDtB,KAAK,EAAEmB,IAAI,CAACG,SAAS,GAAG,gBAAgB,GAAG,cAAc;oBACzDZ,UAAU,EAAE;kBACd,CAAE;kBAAAZ,QAAA,EAEDqB,IAAI,CAACzB;gBAAK;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cACb;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACFtB,OAAA,CAACP,uBAAuB;gBAAAoB,QAAA,eACtBb,OAAA,CAACZ,UAAU;kBAACmD,IAAI,EAAC,KAAK;kBAACxB,KAAK,EAAC,OAAO;kBAACS,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAAC4B,IAAI,CAAE;kBAAArB,QAAA,eACjEb,OAAA,CAACH,UAAU;oBAAAsB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACXtB,OAAA,CAACN,OAAO;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GAlCQY,IAAI,CAACU,EAAE;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmCZ,CACjB;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACuB,EAAA,GAvFI5C,SAAmC;AAyFzC,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}